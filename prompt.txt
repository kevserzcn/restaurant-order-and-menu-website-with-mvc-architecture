MVC mimarisi ile web tasarımı dersimiz için restoren menü sistemi yapmayı düşünüyoruz. bunu flask kütüphanesini kullanarak mvc mmarisi ile yazacağız. veritabanını docker ile düşündük. web için bir admin ekranı ve bir kullanıcı ekranı olacak, ikisi de login edilecek. admin panelinin girişi standart mail ve şifre girişiyken müşteri girişi telefon numarası ve isim şeklinde olacak. yani telefon numarası kullanıcı adı, şifresi de kişinin ismi olacak ve kaydolurken sadece bu bilgiler istenecek. kullanıcı bu şekilde veritabanına kaydedilecek. kullanıcı sitede yemek tatlı içecek salata çeşitlerini görüntüleyebilip sipariş verebilecek. sipariş ver butonuna tıkladıktan sonra siparişiniz oluşturuldu, 10 dk içinde masanıza servis edilecektir pop up'ını görecekler. dilerse kullanıcı sonradan ürün ekleyebilir.  yeme işlemleri bittiğinde kasada öde butonuna basarak kasaya yönlendirilecekler. admin panelinde ise her masanın güncel hesabı görüntülenebilecek. ayrıca her masaya garson girişi isminde bir özellik tanımlanacak. diyelim ki müşteri siparişini garsonla vermek istedi, o durumda garson admin panelinden ilgili masaya ürün eklemesi yapabilecek. hesap ödeme aşamasında ödeme işlemi tamamlandığında ödeme tamamlandı isimli pop-up çıkacak. bu pop-up ile beraber kullanıcının telefon numarasına faturasının pdf i sms olarak atılacak.  dikkat etmen gereken noktalar şunlar:  Kolaylık sağlaması açısından bünyesinde MVC frameworkü ile birlikte gelen herhangi bir dil veya framework kullanılabilir.
- Projelerde Sqlite gibi veritabanları kullanılabilir ve proje içerisinde barınabilir. SqlServer gibi relational veritabanı kullanan arkadaşlarımız veritabanı scriptlerini proje içerisine eklemelidir.
- Proje geliştirirken veritabanı bağlantısı Entity Framework kullanılması önerilir. Code First veya Database First kullanılabilir.
- Proje geliştirirken SOLID prensiplerine uygun hareket edilecektir.
- Proje teslimi fiziksel olarak yapılmayacak olup, github üzerine yüklenecek ve public olarak seçilmiş olan projenin linki paylaşılacaktır.
Proje içerisinde dikkat edeceğimiz hususlar;
Authentication & Authorization
Kullanıcı kayıt, giriş, çıkış (Session veya JWT vs.).
Kullanıcı rolleri (Admin, User, belki Staff).
Yetkiye göre sayfa/görev kısıtlaması.
CRUD İşlemleri (Create, Read, Update, Delete işlemleri.)
Validation & Error Handling
Form girişlerinde zorunlu alan, e-mail formatı, tarih kontrolleri vb.
Hatalı girişlerde kullanıcıya uygun hata mesajı.
Arama / Filtreleme / Listeleme
Listeleme sayfalarında arama kutusu veya filtre (tarihe, kategoriye göre).
Raporlama / Export (En az 1 ekran çıktısının PDF, Excel veya CSV alınabilmesi gibi)
Responsive Arayüz (Bootstrap veya benzeri ile mobil/tablet uyumlu olması.)
Database İlişkileri (En az 2-3 tablo arası ilişki (1-N, N-N))
Logging / History (opsiyonel ama olsa iyi olur)